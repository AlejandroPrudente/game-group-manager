@model GameGroupManager.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security
<link href="~/Content/bootstrap-social-gh-pages/bootstrap-social.css" rel="stylesheet"/>
<link href="~/Content/bootstrap-social-gh-pages/assets/css/font-awesome.css" rel="stylesheet"/>

<h4>Use another service to log in.</h4>
<hr />
@{
	var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
	if (loginProviders.Count() == 0)
	{
		<div>
			<p>
				There are no authentification services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
				for details on configuring this ASP.NET site with regard to using 3rd-party services to manage user log ins.
			</p>
		</div>
	}
	else
	{
		using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
		{
			@Html.AntiForgeryToken()
			<div id="socialLoginList">
				<p>
				@foreach (AuthenticationDescription p in loginProviders)
				{
					if (p.AuthenticationType == "Google")
					{
						<button type="submit" class="btn btn-block btn-social btn-google" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">
							<span class="fa fa-google"></span>@p.AuthenticationType
						</button>
						<br />
					}
					else if (p.AuthenticationType == "Facebook")
					{
						<button type="submit" class="btn btn-block btn-social btn-facebook" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">
							<span class="fa fa-facebook"></span>@p.AuthenticationType
						</button>
						<br />
					}
					else
					{
						//generic social built partly with a Reddit base and without the icon
						<a class="btn btn-block btn-social btn-reddit">
							Log in with your @p.Caption account
						</a>
						<br />
					}
				}
			</p>
		</div>
		}
	}
}
